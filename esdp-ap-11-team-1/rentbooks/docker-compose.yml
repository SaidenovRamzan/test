version: "3"

services:
  postgres:
    image: postgres:14-alpine
    container_name: postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: rentbooks
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data

  mongo:
    image: mongo
    ports:
      - 27017:27017
    container_name: mongodb
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example

  mongo-express:
    container_name: mongo-express
    image: mongo-express
    restart: always
    ports:
      - 8089:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example
      ME_CONFIG_MONGODB_URL: mongodb://root:example@mongo:27017/

  elasticsearch1:
    image: elasticsearch:8.10.3
    container_name: elasticsearch
    restart: always
    environment:
      - cluster.name=docker-cluster
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - discovery.type=single-node
      - xpack.security.enabled=false
      - ES_HEAP_SIZE=1g
    ports:
      - 9200:9200
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch1/data

  kibana:
    image: docker.elastic.co/kibana/kibana:8.10.3
    container_name: kibana
    depends_on:
      - elasticsearch1
    links:
      - elasticsearch1
    ports:
      - "5601:5601"
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch1:9200
    volumes:
      - kibana_data:/usr/share/kibana/data

  redis:
    image: redis:alpine
    container_name: redis
    ports:
      - "6378:6379"

  app:
    container_name: app
    build: 
      context: .
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    depends_on:
      - postgres
      - mongo
      - mongo-express
      - elasticsearch1
      - kibana
      - redis
    volumes:
      - .:/usr/src/app
    command: /bin/bash -c "python manage.py makemigrations &&
                          python manage.py migrate &&
                          python manage.py runserver 0.0.0.0:8000"
    
volumes:
  mongo_data:
  postgres_data:
  elasticsearch_data:
  kibana_data:
